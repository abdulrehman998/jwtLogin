{"version":3,"sources":["logo.svg","server.js","components/login/index.jsx","components/signup/index.jsx","components/profile/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","validationSchema","yup","email","required","password","min","max","Login","history","useHistory","formik","useFormik","initialValues","onSubmit","values","axios","post","then","res","data","console","log","alert","localStorage","setItem","push","style","margin","handleSubmit","Box","sx","flexGrow","Grid","container","spacing","item","md","xs","TextField","fullWidth","color","id","label","variant","name","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","address","phoneNumber","Signup","genderValue","document","querySelector","gender","Number","result","catch","err","placeholder","FormControl","component","FormLabel","textAlign","RadioGroup","defaultValue","FormControlLabel","control","Radio","onSubmitFunction","title","description","response","Dashboard","React","todo","settodo","Title","getItem","get","message","Data","setData","Email","className","map","eachData","Card","minWidth","CardContent","Typography","onClick","removeItem","App","Navbar","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.15361c8d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../server\"\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: (values) => {\r\n      axios\r\n        .post(`${baseUrl}/api/v1/login`, {\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n        .then((res) => {\r\n          if (res.data !== \"error\") {\r\n            console.log(res.data)\r\n            alert('Login Successfully')\r\n            localStorage.setItem('email', values.email)\r\n            history.push(\"/\")\r\n          }\r\n\r\n\r\n        })\r\n\r\n    }\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem\" }}>\r\n      <h1>Login page</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Grid container spacing={5}>\r\n            <Grid item md={2}>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={8} >\r\n              <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n\r\n                name=\"email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n              />\r\n            </Grid>\r\n            <Grid item md={2}>\r\n\r\n            </Grid>\r\n            <Grid item md={2}>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={8} >\r\n              <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"filled-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={5}>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={5}>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"../../server\";\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    address: yup\r\n        .string('Enter your Address')\r\n        .required('Address is required'),\r\n    phoneNumber: yup\r\n        .string(\"Enter your phone number\")\r\n        .min(10, \"Phone number should be 10 integers long\")\r\n        .required(\"Phone number is required\"),\r\n});\r\n\r\nfunction Signup() {\r\n\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            const genderValue = document.querySelector(\r\n                'input[name=\"gender\"]:checked'\r\n            ).value;\r\n            axios\r\n                .post(`${baseUrl}/api/v1/signup`, {\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    gender: genderValue,\r\n                    phoneNumber: Number(values.phoneNumber),\r\n                    password: values.password,\r\n                    address: values.address,\r\n                })\r\n                .then((result) => {\r\n                    alert('SIGNUP SUCCESSFULLY');\r\n                    history.push('/login');\r\n                })\r\n                .catch((err) => {\r\n                    // console.log(err);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div style={{ margin: \"2rem\" }}>\r\n            <h1>Signup page</h1>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Full Name\"\r\n                                variant=\"outlined\"\r\n\r\n                                name=\"name\"\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText={formik.touched.name && formik.errors.name}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n\r\n                                name=\"email\"\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"filled-basic\"\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n\r\n                                name=\"password\"\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"filled-basic\"\r\n                                label=\"Address\"\r\n                                variant=\"outlined\"\r\n                                type=\"address\"\r\n\r\n                                name=\"address\"\r\n                                value={formik.values.address}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.address && Boolean(formik.errors.address)}\r\n                                helperText={formik.touched.address && formik.errors.address}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <TextField\r\n                                fullWidth\r\n                                name=\"phoneNumber\"\r\n                                label=\"Phone Number\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Enter Phone Number\"\r\n                                value={formik.values.phoneNumber}\r\n                                onChange={formik.handleChange}\r\n                                error={\r\n                                    formik.touched.phoneNumber && Boolean(formik.errors.phoneNumber)\r\n                                }\r\n                                helperText={\r\n                                    formik.touched.phoneNumber && formik.errors.phoneNumber\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\" style={{ textAlign: \"left\" }}>\r\n                                    Gender\r\n                                </FormLabel>\r\n                                <RadioGroup\r\n                                    aria-label=\"gender\"\r\n                                    defaultValue=\"male\"\r\n                                    name=\"genderParent\"\r\n                                >\r\n                                    <FormControlLabel\r\n                                        name=\"gender\"\r\n                                        value=\"male\"\r\n                                        control={<Radio />}\r\n                                        label=\"Male\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        name=\"gender\"\r\n                                        value=\"female\"\r\n                                        control={<Radio />}\r\n                                        label=\"Female\"\r\n                                    />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Button fullWidth variant=\"contained\" type=\"submit\">Signup</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Signup;\r\n\r\n\r\n{/* <Box sx={{ flexGrow: 1 }}>\r\n    <Grid container spacing={5}>\r\n        <Grid item md={2}>\r\n\r\n        </Grid>\r\n        <Grid item xs={12} md={8} >\r\n            <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n\r\n                name=\"email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n        </Grid>\r\n        <Grid item md={2}>\r\n\r\n        </Grid>\r\n        <Grid item md={2}>\r\n\r\n        </Grid>\r\n        <Grid item xs={12} md={8} >\r\n            <TextField\r\n                fullWidth\r\n                color=\"primary\"\r\n                id=\"filled-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n\r\n        </Grid>\r\n        <Grid item xs={12} md={2}>\r\n            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n\r\n        </Grid>\r\n    </Grid>\r\n</Box> */}","import * as React from 'react';\r\nimport axios from 'axios';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { baseUrl } from \"../../server\"\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport {\r\n    BrowserRouter as Router,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction onSubmitFunction(values) {\r\n    console.log(\"values: \", values)\r\n    axios.post(`${baseUrl}/api/v1/create`, {\r\n        title: values.title,\r\n        description: values.description\r\n    })\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            const title = values.title;\r\n            localStorage.setItem('title', title)\r\n\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n\r\n\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: '',\r\n            description: '',\r\n        },\r\n        onSubmit: onSubmitFunction\r\n    });\r\n\r\n    const [todo, settodo] = React.useState([])\r\n\r\n    React.useEffect(() => {\r\n\r\n        const Title = localStorage.getItem('title')\r\n        axios.get(`${baseUrl}/api/v1/posts`, {\r\n            title: Title\r\n        })\r\n            .then((res) => {\r\n                let data = res.data\r\n                settodo(data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            })\r\n\r\n        return;\r\n    }, [todo]);\r\n\r\n\r\n\r\n\r\n    const [Data, setData] = React.useState([]);\r\n    React.useEffect(() => {\r\n        const Email = localStorage.getItem('email')\r\n        console.log(Email);\r\n        axios.post(`${baseUrl}/api/v1/profile`, {\r\n            email: Email\r\n        })\r\n            .then((res) => {\r\n                let data = res.data\r\n                setData(data);\r\n                console.log(Data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            })\r\n        return () => {\r\n            console.log('clean up')\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div>\r\n                <h1>Dashboard</h1>\r\n                {\r\n                    Data.map(eachData => {\r\n                        return (\r\n                            <div style={{ margin: \"2rem\" }}>\r\n                                <Box sx={{ flexGrow: 1 }}>\r\n                                    <Grid container spacing={5}>\r\n                                        <Grid item md={4}>\r\n\r\n                                        </Grid>\r\n                                        <Grid item xs={12} md={4} >\r\n                                            <Card sx={{ minWidth: 275 }}>\r\n                                                <CardContent>\r\n                                                    <Typography variant=\"h4\" component=\"div\">\r\n                                                        {eachData.name}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"h6\" component=\"div\">\r\n                                                        {eachData.email}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"h6\" component=\"div\">\r\n                                                        {eachData.address}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"h6\" component=\"div\">\r\n                                                        {eachData.phoneNumber}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"h6\" component=\"div\">\r\n                                                        {eachData.gender}\r\n                                                    </Typography>\r\n                                                    <Button variant=\"contained\" color=\"error\" onClick={() => {\r\n                                                        localStorage.removeItem(\"email\");\r\n                                                        localStorage.removeItem(\"title\");\r\n                                                        alert('Logging Out')\r\n                                                        history.push(\"/login\")\r\n                                                    }} >Log Out</Button>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                        <Grid item md={4}>\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={5}>\r\n                        <Grid item xs={2} md={2}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={8} md={8} >\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Title\"\r\n                                variant=\"standard\"\r\n\r\n                                name=\"title\"\r\n                                value={formik.values.title}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.title && Boolean(formik.errors.title)}\r\n                                helperText={formik.touched.title && formik.errors.title}\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2} md={2}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2} md={2}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={8} md={8} >\r\n\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Description\"\r\n                                variant=\"standard\"\r\n\r\n                                name=\"description\"\r\n                                value={formik.values.description}\r\n                                onChange={formik.handleChange}\r\n\r\n                                error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                helperText={formik.touched.description && formik.errors.description}\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2} md={2}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2} md={2}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={8} md={8}>\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Insert Button</Button>\r\n                        </Grid>\r\n                        <Grid item xs={2} md={2}>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </form >\r\n\r\n            {\r\n                todo.map(eachData => {\r\n                    return (\r\n                        <div style={{ margin: \"2rem\" }}>\r\n                            <Card sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h4\" component=\"div\">\r\n                                        {eachData.title}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h6\" component=\"div\">\r\n                                        {eachData.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\n\n\n\nimport Login from \"./components/login/index\"\nimport Signup from \"./components/signup/index\"\nimport Dashboard from \"./components/profile/index\"\n\n\nfunction App() {\n\n  let history = useHistory();\n\n  // clear state\n\n\n  return (\n    <>\n      <Navbar className=\"bgcolor1\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">My App</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/signup\") }}>Signup</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/login\") }}>Login</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Dashboard</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n\n      </Switch>\n\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
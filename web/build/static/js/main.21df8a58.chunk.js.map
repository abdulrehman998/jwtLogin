{"version":3,"sources":["logo.svg","server.js","components/login/index.jsx","components/signup/index.jsx","components/profile/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","validationSchema","yup","email","required","password","min","max","Login","history","useHistory","formik","useFormik","initialValues","onSubmit","values","console","log","axios","post","then","res","data","alert","localStorage","setItem","push","catch","err","style","margin","handleSubmit","Stack","spacing","TextField","fullWidth","color","id","label","variant","name","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","address","phoneNumber","Signup","genderValue","document","querySelector","gender","Number","result","placeholder","FormControl","component","FormLabel","textAlign","RadioGroup","defaultValue","FormControlLabel","control","Radio","onSubmitFunction","title","description","response","Dashboard","React","todo","settodo","Title","getItem","get","message","Data","setData","Email","className","map","eachData","Card","sx","minWidth","CardContent","Typography","App","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","onClick","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21df8a58.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import { useState, useEffect, useRef } from \"react\"\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../server\"\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values)\r\n\r\n      axios.post(`${baseUrl}/api/v1/login`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n\r\n          if(res.data){\r\n            alert('login successfull');\r\n            const email = values.email;\r\n            localStorage.setItem('email', email)\r\n            history.push(\"/\")\r\n          }\r\n        })\r\n        .catch((err)=>{\r\n          console.log(err)\r\n        })\r\n\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"2rem\" }}>\r\n      <h1>Login page</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n        </Stack>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import { useState, useEffect, useRef } from \"react\"\r\nimport axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"../../server\";\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    address: yup\r\n        .string('Enter your Address')\r\n        .required('Address is required'),\r\n    phoneNumber: yup\r\n        .string(\"Enter your phone number\")\r\n        .min(10, \"Phone number should be 10 integers long\")\r\n        .required(\"Phone number is required\"),\r\n});\r\n\r\nfunction Signup() {\r\n\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            const genderValue = document.querySelector(\r\n                'input[name=\"gender\"]:checked'\r\n            ).value;\r\n            axios\r\n                .post(`${baseUrl}/api/v1/signup`, {\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    gender: genderValue,\r\n                    phoneNumber: Number(values.phoneNumber),\r\n                    password: values.password,\r\n                    address: values.address,\r\n                })\r\n                .then((result) => {\r\n                    alert('SIGNUP SUCCESSFULLY');\r\n                    history.push('/login');\r\n                })\r\n                .catch((err) => {\r\n                    // console.log(err);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div style={{ margin: \"2rem\" }}>\r\n            <h1>Signup page</h1>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Stack spacing={2}>\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Full Name\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"name\"\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                        helperText={formik.touched.name && formik.errors.name}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"filled-basic\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n\r\n                        name=\"password\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"filled-basic\"\r\n                        label=\"Address\"\r\n                        variant=\"outlined\"\r\n                        type=\"address\"\r\n\r\n                        name=\"address\"\r\n                        value={formik.values.address}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.address && Boolean(formik.errors.address)}\r\n                        helperText={formik.touched.address && formik.errors.address}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        name=\"phoneNumber\"\r\n                        label=\"Phone Number\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Enter Phone Number\"\r\n                        value={formik.values.phoneNumber}\r\n                        onChange={formik.handleChange}\r\n                        error={\r\n                            formik.touched.phoneNumber && Boolean(formik.errors.phoneNumber)\r\n                        }\r\n                        helperText={\r\n                            formik.touched.phoneNumber && formik.errors.phoneNumber\r\n                        }\r\n                    />\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\" style={{ textAlign: \"left\" }}>\r\n                            Gender\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label=\"gender\"\r\n                            defaultValue=\"male\"\r\n                            name=\"genderParent\"\r\n                        >\r\n                            <FormControlLabel\r\n                                name=\"gender\"\r\n                                value=\"male\"\r\n                                control={<Radio />}\r\n                                label=\"Male\"\r\n                            />\r\n                            <FormControlLabel\r\n                                name=\"gender\"\r\n                                value=\"female\"\r\n                                control={<Radio />}\r\n                                label=\"Female\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n\r\n                    <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Signup</Button>\r\n                </Stack>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Signup;","import * as React from 'react';\r\nimport axios from 'axios';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { baseUrl } from \"../../server\"\r\n\r\n\r\n\r\nfunction onSubmitFunction(values) {\r\n    console.log(\"values: \", values)\r\n    axios.post(`${baseUrl}/api/v1/create`,{\r\n        title: values.title,\r\n        description: values.description\r\n    })\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            const title = values.title;\r\n            localStorage.setItem('title', title)\r\n\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n  }\r\n\r\n  \r\n\r\n\r\n  \r\nfunction Dashboard() {\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          title: '',\r\n          description: '',\r\n        },\r\n        onSubmit: onSubmitFunction\r\n      });\r\n\r\n        const [todo, settodo] = React.useState([])\r\n        \r\n        React.useEffect(() => {\r\n    \r\n            const Title = localStorage.getItem('title')\r\n            console.log(Title);\r\n            axios.get(`${baseUrl}/api/v1/posts`,{\r\n                title: Title\r\n            })\r\n            .then((res) => {\r\n                let data = res.data\r\n                settodo(data);\r\n                console.log(todo);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            })\r\n    \r\n            return () => {\r\n                console.log(\"cleanup\")\r\n            };\r\n        }, []);\r\n\r\n\r\n\r\n\r\n    const [Data, setData] = React.useState([]);\r\n    React.useEffect(() => {\r\n        const Email = localStorage.getItem('email')\r\n        console.log(Email);\r\n        axios.post(`${baseUrl}/api/v1/profile`, {\r\n            email: Email\r\n        })\r\n            .then((res) => {\r\n                let data = res.data\r\n                setData(data);\r\n                console.log(Data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            })\r\n        return () => {\r\n            console.log('clean up')\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div>\r\n                <h1>Dashboard</h1>\r\n                {\r\n                    Data.map(eachData => {\r\n                        return (\r\n                            <div style={{ margin: \"2rem\" }}>\r\n                                <Card sx={{ minWidth: 275 }}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h4\" component=\"div\">\r\n                                            {eachData.name}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"div\">\r\n                                            {eachData.email}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"div\">\r\n                                            {eachData.address}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"div\">\r\n                                            {eachData.phoneNumber}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"div\">\r\n                                            {eachData.gender}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Stack spacing={2}>\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Title\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"title\"\r\n                        value={formik.values.title}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.title && Boolean(formik.errors.title)}\r\n                        helperText={formik.touched.title && formik.errors.title}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"description\"\r\n                        value={formik.values.description}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.description && Boolean(formik.errors.description)}\r\n                        helperText={formik.touched.description && formik.errors.description}\r\n                    />\r\n                    <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Insert Button</Button>\r\n                </Stack>\r\n\r\n            </form>\r\n\r\n            {\r\n                    todo.map(eachData => {\r\n                        return (\r\n                            <div style={{ margin: \"2rem\" }}>\r\n                                <Card sx={{ minWidth: 275 }}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h4\" component=\"div\">\r\n                                            {eachData.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" component=\"div\">\r\n                                            {eachData.description}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\n\n\n\nimport Login from \"./components/login/index\"\nimport Signup from \"./components/signup/index\"\nimport Dashboard from \"./components/profile/index\"\n\n\nfunction App() {\n\n  let history = useHistory();\n\n  return (\n    <>\n      <Navbar bg=\"primary\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">My App</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/signup\") }}>Signup</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/login\") }}>Login</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Dashboard</Nav.Link>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n\n      </Switch>\n\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}